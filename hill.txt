#include<stdio.h>
#include<math.h>

float encrypt[50][1],decrypt[50][1],mes[50][1],a[50][50],b[50][50],c[50][50];
int z;

void encryption();
void decryption();
void getkeymsg();
void innverse();

void main()
{
    printf("enter dim\n");
    scanf("%d",&z);
    getkeymsg();
    encryption();
    decryption();
}

void encryption()
{
    int i,j,k;
    for(i=0;i<z;i++)
    for(j=0;j<1;j++)
    for(k=0;k<z;k++)
        encrypt[i][j]=encrypt[i][j]+a[i][k]*mes[k][j];
    printf("\nencrypted\n");
    for(i=0;i<z;i++)
        printf("%c ",(char)(fmod(encrypt[i][0],26)+'a'));
}

void decryption()
{
    int i,j,k;
    innverse();
    for(i=0;i<z;i++)
    for(j=0;j<1;j++)
    for(k=0;k<z;k++)
        decrypt[i][j]=decrypt[i][j]+b[i][k]*encrypt[k][j];
    printf("\ndecrypt");
    for(i=0;i<z;i++)
        printf("%c",(char)(fmod(decrypt[i][0],26)+'a'));
}

void getkeymsg()
{
    int i,j;
    char msg[10];
    printf("enter matrix\n");
    for(i=0;i<z;i++)
     for(j=0;j<z;j++){
        scanf("%f",&a[i][j]);
         c[i][j]=a[i][j];
     }
     printf("enter msg\n");
     scanf("%s",msg);
     msg[i]='\0';
    for(i=0;i<z;i++)
        mes[i][0]=msg[i]-'a';     
}

void innverse()
{
    int i,j,k;
    float p,q;
    for(i=0;i<z;i++)
    for(j=0;j<z;j++)
    {
        if(i==j)
            b[i][j]=1;
        else
            b[i][j]=0;
    }
            
    for(k=0;k<z;k++){
        for(i=0;i<z;i++)
         {
             p=c[i][k];
             q=c[k][k];
        for(j=0;j<z;j++)
        {
          if(i!=k)
            {
            c[i][j]=c[i][j]*q-p*c[k][j];
            b[i][j]=b[i][j]*q-p*b[k][j];
                
            }
         }
        }
    }
    
     for(i=0;i<z;i++)
     for(j=0;j<z;j++)
        b[i][j]=b[i][j]/c[i][i];
    printf("\ninverse matraix\n");
     for(i=0;i<z;i++){
      for(j=0;j<z;j++)
        printf("%f ",b[i][j]);
        printf("\n");
      }
}












